server {
    listen 80;
    server_name ${SERVER_NAME};

    server_tokens off;

    location / {
        # Auth module configuration
        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;

        # Standard proxy headers - 'X-Forwarded-*' and 'X-Real-*'
        proxy_set_header Host               $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Forwarded-For    $remote_addr;
        proxy_set_header X-Real-IP          $remote_addr;

        # Endpoint to proxy requests to.
        proxy_pass ${ENDPOINT_SCHEME}://${ENDPOINT_HOSTNAME}:${ENDPOINT_PORT};

        # Custom headers attached to the response
        more_set_headers Access-Control-Allow-Origin ${VIEWER_SCHEME}://${VIEWER_HOSTNAME};
        more_set_headers Access-Control-Allow-Headers *;
        more_set_headers Access-Control-Allow-Headers OPTIONS,GET;
        more_set_headers Access-Control-Allow-Credentials true;
    }

    location /auth {
        # This tells NGINX that this path is not accessible from outside.
        internal;

        # Don't pass any request body (there shouldn't be one anyway) to the
        # request logging endpoint.
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";

        # Add the custom 'X-API-*' headers, expected by the request logging
        # endpoint. These define what is logged in the logging platform.
        proxy_set_header X-API-RequestURI  $scheme://$host$request_uri;
        proxy_set_header X-API-RequestType ${API_REQUEST_TYPE};

        # The request logging endpoint.
        proxy_pass ${LOGGING_SCHEME}://${LOGGING_HOSTNAME}:${LOGGING_PORT}/api/request;

        # Request to the logging endpoint are SSL validated
        proxy_ssl_trusted_certificate /etc/nginx/ssl/bfi-iiif-root-ca.crt;
        proxy_ssl_server_name         on;
        proxy_ssl_verify              on;
        proxy_ssl_verify_depth        2;
        proxy_ssl_session_reuse       on;
    }
}
